//*****************************************************************************
//*****************************************************************************
//  FILENAME: UART_CLOCK.h
//   Version: 2.60, Updated on 2012/3/2 at 9:13:11
//  Generated by PSoC Designer 5.2.2551
//
//  DESCRIPTION: Counter8 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2012. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef UART_CLOCK_INCLUDE
#define UART_CLOCK_INCLUDE

#include <m8c.h>

#pragma fastcall16 UART_CLOCK_EnableInt
#pragma fastcall16 UART_CLOCK_DisableInt
#pragma fastcall16 UART_CLOCK_Start
#pragma fastcall16 UART_CLOCK_Stop
#pragma fastcall16 UART_CLOCK_bReadCounter              // Read  DR0
#pragma fastcall16 UART_CLOCK_WritePeriod               // Write DR1
#pragma fastcall16 UART_CLOCK_bReadCompareValue         // Read  DR2
#pragma fastcall16 UART_CLOCK_WriteCompareValue         // Write DR2

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 bUART_CLOCK_ReadCounter              // Read  DR0 (Deprecated)
#pragma fastcall16 bUART_CLOCK_ReadCompareValue         // Read  DR2 (Deprecated)


//-------------------------------------------------
// Prototypes of the UART_CLOCK API.
//-------------------------------------------------

extern void UART_CLOCK_EnableInt(void);                           // Proxy Class 1
extern void UART_CLOCK_DisableInt(void);                          // Proxy Class 1
extern void UART_CLOCK_Start(void);                               // Proxy Class 1
extern void UART_CLOCK_Stop(void);                                // Proxy Class 1
extern BYTE UART_CLOCK_bReadCounter(void);                        // Proxy Class 1
extern void UART_CLOCK_WritePeriod(BYTE bPeriod);                 // Proxy Class 1
extern BYTE UART_CLOCK_bReadCompareValue(void);                   // Proxy Class 2
extern void UART_CLOCK_WriteCompareValue(BYTE bCompareValue);     // Proxy Class 1

// The following functions are deprecated.
// They may be omitted in future releases
//
extern BYTE bUART_CLOCK_ReadCounter(void);            // Deprecated
extern BYTE bUART_CLOCK_ReadCompareValue(void);       // Deprecated


//--------------------------------------------------
// Constants for UART_CLOCK API's.
//--------------------------------------------------

#define UART_CLOCK_CONTROL_REG_START_BIT       ( 0x01 )
#define UART_CLOCK_INT_REG_ADDR                ( 0x0e1 )
#define UART_CLOCK_INT_MASK                    ( 0x01 )


//--------------------------------------------------
// Constants for UART_CLOCK user defined values
//--------------------------------------------------

#define UART_CLOCK_PERIOD                      ( 0x3d )
#define UART_CLOCK_COMPARE_VALUE               ( 0x1f )


//-------------------------------------------------
// Register Addresses for UART_CLOCK
//-------------------------------------------------

#pragma ioport  UART_CLOCK_COUNTER_REG: 0x020              //DR0 Count register
BYTE            UART_CLOCK_COUNTER_REG;
#pragma ioport  UART_CLOCK_PERIOD_REG:  0x021              //DR1 Period register
BYTE            UART_CLOCK_PERIOD_REG;
#pragma ioport  UART_CLOCK_COMPARE_REG: 0x022              //DR2 Compare register
BYTE            UART_CLOCK_COMPARE_REG;
#pragma ioport  UART_CLOCK_CONTROL_REG: 0x023              //Control register
BYTE            UART_CLOCK_CONTROL_REG;
#pragma ioport  UART_CLOCK_FUNC_REG:    0x120              //Function register
BYTE            UART_CLOCK_FUNC_REG;
#pragma ioport  UART_CLOCK_INPUT_REG:   0x121              //Input register
BYTE            UART_CLOCK_INPUT_REG;
#pragma ioport  UART_CLOCK_OUTPUT_REG:  0x122              //Output register
BYTE            UART_CLOCK_OUTPUT_REG;
#pragma ioport  UART_CLOCK_INT_REG:       0x0e1            //Interrupt Mask Register
BYTE            UART_CLOCK_INT_REG;


//-------------------------------------------------
// UART_CLOCK Macro 'Functions'
//-------------------------------------------------

#define UART_CLOCK_Start_M \
   UART_CLOCK_CONTROL_REG |=  UART_CLOCK_CONTROL_REG_START_BIT

#define UART_CLOCK_Stop_M  \
   UART_CLOCK_CONTROL_REG &= ~UART_CLOCK_CONTROL_REG_START_BIT

#define UART_CLOCK_EnableInt_M   \
   M8C_EnableIntMask(UART_CLOCK_INT_REG, UART_CLOCK_INT_MASK)

#define UART_CLOCK_DisableInt_M  \
   M8C_DisableIntMask(UART_CLOCK_INT_REG, UART_CLOCK_INT_MASK)

#endif
// end of file UART_CLOCK.h
